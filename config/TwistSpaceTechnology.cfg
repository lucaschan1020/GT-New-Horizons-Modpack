# Configuration file

advancedmegaoilcracker {
    # Enable Advanced Mega Oil Cracker Perfect Overclock. Type: boolean [default: false]
    B:EnablePerfectOverclock_AdvancedMegaOilCracker=false

    # Parallel of Advanced Mega Oil Cracker. Type: int [range: 1 ~ 65536, default: 256]
    I:Parallel_AdvancedMegaOilCracker=256

    # Speed Bonus of Advanced Mega Oil Cracker. Type: float [default: 0.5]
    S:SpeedBonus_AdvancedMegaOilCracker=0.5
}


"ball lightning" {
    # Enable Ball Lightning. [default: true]
    B:Enable_BallLightning=true

    # Wireless Mode Extra Eu Cost. Type: int [range: 1 ~ 2147483646, default: 64]
    I:WirelessModeExtraEuCost_BallLightning=64

    # Wireless Mode Work Ticks. Type: int [range: 1 ~ 2147483646, default: 64]
    I:WirelessModeTickEveryProcess_BallLightning=64
}


beeengineer {
    # Chance to successfully transform, type: double, 0.0 - 1.0 [default: 0.4]
    S:BE_pChance=0.4

    # Chance to successfully transform with UUM, type: double, 0.0 - 1.0 [default: 0.8]
    S:BE_pChanceEnhanced=0.8

    # Time needed for each try to transform drone, in ticks. [range: 1 ~ 1310720, default: 200]
    I:BE_pEachProcessTime=200

    # Honey needed for each try to transform drone. [range: 0 ~ 2147483647, default: 128000]
    I:BE_pHoneyCost=128000

    # UUM needed for each try to enhance. [range: 0 ~ 2147483647, default: 32000]
    I:BE_pUUMCost=32000
}


bloodhell {
    # Enable Blood Hatch
    # This depends on Enable Blood Hell [default: true]
    B:"Enable Blood Hatch"=true

    # Enable Blood Hatch Drains Armok Orb Infinitely [default: true]
    B:"Enable Blood Hatch Armok Infinite Drain"=true

    # Enable Blood Hell [default: true]
    B:"Enable Blood Hell"=true
}


cleanroom_allowed_blocks {

    managlass {
        S:Name=tile.manaGlass
        I:Percentage=50
    }

    elfglass {
        S:Name=tile.elfGlass
        I:Percentage=50
    }

    reinforced_glass {
        S:Name=blockAlloyGlass
        I:Percentage=5
    }

    bw_reinforced_glass_0 {
        I:Meta=0
        S:Name=BW_GlasBlocks
        I:Percentage=50
    }

    bw_reinforced_glass {
        S:Name=BW_GlasBlocks
        I:Percentage=100
    }

    elevator {
        I:Count=1
        S:Name=tile.openblocks.elevator
    }

    travel_anchor {
        I:Count=1
        S:Name=tile.blockTravelAnchor
    }

    warded_glass {
        I:Meta=2
        S:Name=tile.blockCosmeticOpaque
        I:Percentage=50
    }

}


combatstats {
    # decide whether to enable the combatstats system(WIP).DO NOT USE IT FOR NOW! [default: false]
    B:activateCombatStats=false
}


coredeviceofhumanpowergenerationfacility {
    # Enable Core Device of Human Power Generation Facility. [default: true]
    B:Enable_CoreDeviceOfHumanPowerGenerationFacility=true
}


crystallineinfinitier {
    # When field generator block tier is beyond this value, machine will enable perfect overclock. 3 is the lowest EOH block. Type: byte [range: 1 ~ 11, default: 3]
    I:FieldTier_EnablePerfectOverclock_CrystallineInfinitier=3

    # The default mode when deploy a machine. 0=Autoclave, 1=Crystalline Infinitier. Type: byte [range: 0 ~ 1, default: 0]
    I:Mode_Default_CrystallineInfinitier=0

    # Parallel Multiplier of Crystalline Infinitier. The final parallel will be multiplied this value. Type: int [range: 1 ~ 256, default: 1]
    I:ParallelMultiplier_CrystallineInfinitier=1

    # Generate direct recipe of Perfect Lapotron Crystal and Perfect Energy Crystal. [default: false]
    B:PerfectCrystalRecipeNonCyclized=false

    # Speed Multiplier of Crystalline Infinitier in Autoclave mode. Type: int [range: 1 ~ 64, default: 4]
    I:SpeedMultiplier_AutoclaveMode_CrystallineInfinitier=4

    # Speed Multiplier of Crystalline Infinitier in Crystalline Infinitier mode. Type: int [range: 1 ~ 64, default: 1]
    I:SpeedMultiplier_CrystallineInfinitierMode_CrystallineInfinitier=1
}


deployednanocore {
    # Enable Deployed Nano Core. [default: true]
    B:Enable_DeployedNanoCore=true

    # How many ticks per progressing cost in Wireless mode of Deployed Nano Core. Type: int [range: 1 ~ 65536, default: 128]
    I:TickPerProgressing_WirelessMode_DeployedNanoCore=128
}


"dimensionally transcendent matter plasma forge prototype mk2" {
    # Enable Dimensionally Transcendent Matter Plasma Forge Prototype MK2. Need enable Modularized Machine System at the same time. [default: true]
    B:EnableDimensionallyTranscendentMatterPlasmaForgePrototypeMK2=true
}


disassembler {
    # Cost Ticks per item disassembling. [range: 1 ~ 72000, default: 100]
    I:CostTicksPerItemDisassembling_Disassembler=100

    # Enable TST Disassembler. [default: true]
    B:Enable_Disassembler=true
}


dsp {
    # EU of every Antimatter can generate. Type: long [default: 6442450941]
    S:EUEveryAntimatter=6442450941

    # EU of every Antimatter Fuel Rod can generate. Type: long [default: 2199023254528]
    S:EUEveryAntimatterFuelRod=2199023254528

    # EU of every Strange Annihilation Fuel Rod can generate. Type: long [default: 70368744144896]
    S:EUEveryStrangeAnnihilationFuelRod=70368744144896

    # EU per Critical Photon Cost. Type: long [default: 2147483647]
    S:EUPerCriticalPhoton=2147483647

    # EUt of Launching Node. [range: 1 ~ 2147483647, default: 125829120]
    I:EUTOfLaunchingNode=125829120

    # EUt of Launching Solar Sail. [range: 1 ~ 2147483647, default: 1966080]
    I:EUTOfLaunchingSolarSail=1966080

    # Enable Dyson Sphere Program System. Type: boolean [default: true]
    B:EnableDysonSphereProgramSystem=true

    # Enable Render of Artificial Star when placing a new one. [default: true]
    B:EnableRenderDefaultArtificialStar=true

    # How much of Speed Multiplier when in Gravitational Lens intensify mode. Type: double [default: 4.0]
    S:gravitationalLensSpeedMultiplier=4.0

    # Max DSP Power Point per DSP Receiver can request. Type: long [default: 2199023254528]
    S:maxPowerPointPerReceiver=2199023254528

    # Overload speed up multiplier Special Calculation Parameter. Extra speed = overload time ^ (1 / ((900 / overload time) * this + 5)) Type: int [range: 1 ~ 1000000000, default: 1000]
    I:overloadSpecialCalculationParameter=1000

    # How much speed up when overload mode. Type: int [range: 1 ~ 256, default: 30]
    I:overloadSpeedUpMultiplier=30

    # Seconds of Artificial Star one progress time. Type: double, turn to tick time. [default: 6.4]
    S:secondsOfArtificialStarProgressCycleTime=6.4

    # Intensify Mode Time (second) of every Gravitational Lens will provide. Type: int [range: 0 ~ 2147483647, default: 600]
    I:secondsOfEveryGravitationalLensProvideToIntensifyTime=600

    # Overload Time (second) of every Space Warper will provide. Type: int [range: 1 ~ 2147483647, default: 900]
    I:secondsOfEverySpaceWarperProvideToOverloadTime=900

    # Seconds of launching a Dyson Sphere Node. [default: 900.0]
    S:secondsOfLaunchingNode=900.0

    # Seconds of launching a Solar Sail. [default: 120.0]
    S:secondsOfLaunchingSolarSail=120.0

    # Default Solar Sail amount can hold. Type: long [default: 2048]
    S:solarSailCanHoldDefault=2048

    # Solar Sail amount per DSP Node can hold. Type: long [default: 256]
    S:solarSailCanHoldPerNode=256

    # DSP Power Point per Solar Sail can produce. Type: long [default: 524288]
    S:solarSailPowerPoint=524288
}


enablemodularizedmachinesystem {
    # Enable Modularized Machine System. [default: true]
    B:ModularizedMachineStuffs=true
}


"eye of wood" {
    # How many seconds per processing cost of Eye of Wood. Type: int [range: 1 ~ 3600, default: 60]
    I:SecondsPerProcessing_EyeOfWood=60

    # Standard dimension the Eye of Wood is allowed in. Default 0 - Overworld. Type: int [range: -9999 ~ 9999, default: 0]
    I:StandardDimensionID_EyeOfWood=0

    # Standard amount (in L) of Lava per processing need of Eye of Wood. Type: int [range: 1 ~ 1024, default: 256]
    I:StandardLavaNeed_EyeOfWood=256

    # Standard amount (in L) of Water per processing need of Eye of Wood. Type: int [range: 1 ~ 1024, default: 256]
    I:StandardWaterNeed_EyeOfWood=256
}


general {
    # Default Batch mode state of machine when placed. True is auto enable Batch mode. [default: false]
    B:DEFAULT_BATCH_MODE=false

    # Wireless energy machine parallel over recipes limitation in one processing. How many recipes can be processed at once. [range: 1 ~ 2147483647, default: 100]
    I:DefaultCycleNum_WirelessEnergyMultiMachineBase=100

    # Max parallel limit of normal machines. [range: 1 ~ 2147483647, default: 2147483647]
    I:MAX_PARALLEL_LIMIT=2147483647

    # Rewrite EIO Travel Staff Config : Let Travel Staff Max Distance be same as Teleport Staff. Because Yamato's teleportation function is calling the Travel Stuff Source function. [default: false]
    B:RewriteEIOTravelStaffConfig=false
}


hephaestusatelier {
    # In normal mode, how many ticks every processing cost. Type: int [range: 1 ~ 32767, default: 512]
    I:ConsumeDuration_HephaestusAtelier=512

    # In wireless mode, how much EU per item smelting cost. Type: int [range: 1 ~ 32767, default: 2048]
    I:ConsumeEuPerSmelting_HephaestusAtelier=2048

    # In normal mode, how much EU/t per parallel cost of Hephaestus' Atelier. Type: int [range: 1 ~ 30, default: 7]
    I:ConsumeEutPerParallel_HephaestusAtelier=7

    # In wireless mode with T2 coil, how many ticks every processing cost. Type: int [range: 1 ~ 32767, default: 256]
    I:DurationPerProcessing_T2Coil_Wireless_HephaestusAtelier=256

    # In wireless mode with T3 coil, how many ticks every processing cost. Type: int [range: 1 ~ 32767, default: 20]
    I:DurationPerProcessing_T3Coil_Wireless_HephaestusAtelier=20
}


holyseparator {
    # The default mode when deploy a machine. 0=Cutter, 1=Slicer, 2=Lathe. Type: byte [default: 0]
    S:Mode_Default_HolySeparator=0

    # How many parallel per tier add. Type: int [range: 1 ~ 255, default: 8]
    I:ParallelPerPiece_HolySeparator=8

    # How many piece to enable perfect overclock. Type: int [range: 1 ~ 64, default: 16]
    I:Piece_EnablePerfectOverclock_HolySeparator=16

    # The speed bonus = this ^ tier . Type: float [default: 0.9]
    S:SpeedBonus_MultiplyPerTier_HolySeparator=0.9
}


householdcellfragmentizer {
    # Parallel of Tier 1. Type: int [range: 1 ~ 2147483646, default: 128]
    I:BlockTier1Parallel_MegaMacerator=128

    # Parallel of Tier 2. Type: int [range: 1 ~ 2147483646, default: 32768]
    I:BlockTier2Parallel_MegaMacerator=32768

    # Enable perfect overclock of Mega Macerator. Type: boolean [default: false]
    B:EnablePerfectOverclock_MegaMacerator=false

    # Speed Bonus of Mega Macerator. Type: float [default: 0.125]
    S:SpeedBonus_MegaMacerator=0.125
}


hyperspacetimetransformer {
    #  [default: true]
    B:EnablePerfectOverclock_MolecularTransformerMode_HyperSpacetimeTransformer=true

    #  [range: 0 ~ 1, default: 0]
    I:Mode_Default_HyperSpacetimeTransformer=0

    #  [range: 1 ~ 2147483647, default: 1]
    I:ParallelMultiplier_HyperSpacetimeTransformer=1

    #  [range: 1 ~ 2147483647, default: 5]
    I:SpeedMultiplier_MolecularTransformerMode_HyperSpacetimeTransformer=5

    #  [range: 1 ~ 2147483647, default: 1]
    I:SpeedMultiplier_SpaceTimeTransformerMode_HyperSpacetimeTransformer=1
}


indistincttentacle {
    # Component Casing Tier Limit of Indistinct Tentacle Wireless Mode. LV=1; MAX=14; UMV=12. Type: byte [range: 0 ~ 14, default: 12]
    I:ComponentCasingTierLimit_WirelessMode_IndistinctTentacle=12

    # Enable Indistinct Tentacle Recipe Registry. [default: true]
    B:EnableRecipeRegistry_IndistinctTentacle=true

    # Glass Tier Limit of Indistinct Tentacle Laser Hatch permission. Type: byte [range: 0 ~ 12, default: 8]
    I:GlassTierLimit_LaserHatch_IndistinctTentacle=8

    # Glass Tier Limit of Indistinct Tentacle Wireless Mode. Type: byte [range: 0 ~ 12, default: 12]
    I:GlassTierLimit_WirelessMode_IndistinctTentacle=12

    # Default mode when placing a Indistinct Tentacle controller block. 0=AL; 1=CAL; 2=Assembler; 3=PreciseAssembler; Type: byte [range: 0 ~ 3, default: 0]
    I:Mode_Default_IndistinctTentacle=0

    # Parallel of Indistinct Tentacle default power mode. Type: int [range: 1 ~ 65536, default: 256]
    I:Parallel_Default_IndistinctTentacle=256

    # Speed Multiplier of Indistinct Tentacle Assembler mode. Type: int [range: 1 ~ 256, default: 4]
    I:SpeedMultiplier_Assembler_IndistinctTentacle=4

    # Speed Multiplier of Indistinct Tentacle Assembly Line mode. Type: int [range: 1 ~ 256, default: 1]
    I:SpeedMultiplier_AssemblyLine_IndistinctTentacle=1

    # Speed Multiplier of IndistinctTentacle Component Assembly Line mode. Type: int [range: 1 ~ 256, default: 2]
    I:SpeedMultiplier_ComponentAssemblyLine_IndistinctTentacle=2

    # Speed Multiplier of Indistinct Tentacle Precise Assembler mode. Type: int [range: 1 ~ 256, default: 4]
    I:SpeedMultiplier_PreciseAssembler_IndistinctTentacle=4

    # Indistinct Tentacle in Wireless Mode every process cost the ticks. Type: int [range: 1 ~ 65536, default: 512]
    I:TickEveryProcess_WirelessMode_IndistinctTentacle=512
}


industrialalchemytower {
    # Enable Industrial Alchemy Tower [default: true]
    B:"Enable Industrial Alchemy Tower"=true
}


industrialmagicmatrix {
    # Enable Industrial Magic Matrix [default: true]
    B:EnableIndustrialMagicMatrix=true
}


industrialmagnetarseparator {
    # Enable Industrial Magnetar Separator. [default: true]
    B:EnableIndustrialMagnetarSeparator=true

    # Eu Modifier of Industrial Magnetar Separator. Type: float [default: 0.8]
    S:EuModifier_IndustrialMagnetarSeparator=0.8

    # Parallel Multiply of Industrial Magnetar Separator. Type: int [range: 1 ~ 2147483646, default: 4]
    I:ParallelMultiply_IndustrialMagnetarSeparator=4

    # Speed Bonus of Industrial Magnetar Separator. Type: float [default: 0.25]
    S:SpeedBonus_IndustrialMagnetarSeparator=0.25
}


intensifychemicaldistorter {
    # The default mode when deploy a machine. 0=ICD, 1=LCR. Type: int [range: 0 ~ 1, default: 0]
    I:Mode_Default_IntensifyChemicalDistorter=0

    # Parallel of Intensify Chemical Distorter in Intensify Chemical Distorter mode. Type: int [range: 1 ~ 32767, default: 16]
    I:Parallel_ICDMode_IntensifyChemicalDistorter=16

    # Parallel of Intensify Chemical Distorter in Large Chemical Reactor mode. Type: int [range: 1 ~ 32767, default: 1024]
    I:Parallel_LCRMode_IntensifyChemicalDistorter=1024

    # Speed Multiplier of Intensify Chemical Distorter in Intensify Chemical Distorter. Type: int [range: 1 ~ 16, default: 1]
    I:SpeedUpMultiplier_ICDMode_IntensifyChemicalDistorter=1

    # Speed Multiplier of Intensify Chemical Distorter in Large Chemical Reactor mode. Type: int [range: 1 ~ 16, default: 10]
    I:SpeedUpMultiplier_LCRMode_IntensifyChemicalDistorter=10
}


"large neutron oscillator" {
    # Enable Large Neutron Oscillator. Need enable Modularized Machine System at the same time. [default: true]
    B:EnableLargeNeutronOscillator=true
}


lasermeteorminer {
    # Enable Laser Meteor Miner. [default: true]
    B:Enable_LaserMeteorMiner=true

    # Standard recipe time of Laser Meteor Miner, unit second. Type: int [range: 1 ~ 64, default: 10]
    I:StandardRecipeDuration_Second_LaserMeteorMiner=10
}


magneticdomainconstructor {
    # The Coil Tier can enable perfect overclock in Extruder mode. 0 is Cupronickel Coil, 13 is Eternal Coil, default 11 is Infinity Coil. Type: int [range: 0 ~ 13, default: 11]
    I:CoilTier_EnablePerfectOverclockExtruderMode_MagneticDrivePressureFormer=11

    # The default mode when deploy a machine. 0=Electro Magnetic Separator, 1=Polarizer. Type: byte [range: 0 ~ 1, default: 0]
    I:Mode_Default_MagneticDomainConstructor=0

    # Parallel per Ring add. Type: int [range: 1 ~ 65536, default: 64]
    I:Parallel_PerRing_MagneticDomainConstructor=64

    # The speed bonus = this ^ tier . Type: float [default: 0.75]
    S:SpeedBonus_MultiplyPerTier_MagneticDomainConstructor=0.75
}


magneticdrivepressureformer {
    # EU Multiplier of Magnetic Drive Pressure Former. Type: float [default: 0.75]
    S:EU_Multiplier_MagneticDrivePressureFormer=0.75

    # Glass Tier of Laser Hatch Limit in Magnetic Drive Pressure Former. Type: int [range: 1 ~ 12, default: 11]
    I:GlassTier_LimitLaserHatch_MagneticDrivePressureFormer=11

    # The default mode when deploy a machine. 0=Extruder, 1=Bender, 2=Press, 3=Hammer. Type: byte [default: 0]
    S:Mode_Default_MagneticDrivePressureFormer=0

    # Parallel of Magnetic Drive Pressure Former. Type: int [range: 1 ~ 65536, default: 1024]
    I:Parallel_MagneticDrivePressureFormer=1024

    # Speed Up amount of per Coil tier. Type: int [range: 1 ~ 256, default: 1]
    I:SpeedUpMultiplier_Coil_MagneticDrivePressureFormer=1

    # Speed Multiplier of Magnetic Drive Pressure Former in Extruder mode. Type: int [range: 1 ~ 256, default: 8]
    I:SpeedUpMultiplier_ExtruderMode_MagneticDrivePressureFormer=8

    # Speed Multiplier of Magnetic Drive Pressure Former in Other mode. Type: int [range: 1 ~ 256, default: 16]
    I:SpeedUpMultiplier_OtherMode_MagneticDrivePressureFormer=16
}


magneticmixer {
    # The speed bonus = this ^ tier . Type: float [default: 0.8]
    S:SpeedBonus_MultiplyPerTier_MagneticMixer=0.8
}


manufacturingcenter {
    # The maximum parallel modifier [range: 1 ~ 2147483647, default: 2]
    I:"Max Parallel Modifier"=2

    # The Power Reduction for each tier over the lowest tier (not included) [range: 0.0 ~ 3.4028235E38, default: 0.15]
    S:"Power Reduction"=0.15

    # The Base Speed Bonus [range: 0.0 ~ 3.4028235E38, default: 0.2]
    S:"Speed Bonus Base"=0.2

    # The Speed Bonus for each tier over the lowest tier (not included) [range: 0.0 ~ 3.4028235E38, default: 0.5]
    S:"Speed Bonus Tier"=0.5
}


maxfueldiscount_dtmpfp {
    # Max Fuel Discount of DTMPFP.
    D:"Dimensionally Transcendent Matter Plasma Forge Prototype MK2"=0.25
}


megacraftingcenter {
    # Enable Mega Crafting Center. [default: true]
    B:Enable_MegaCraftingCenter=true

    # Max Magnification parameter limitation of Mega Crafting Center. Type: int [range: 1 ~ 2147483647, default: 8388608]
    I:MaxMagnification_MegaCraftingCenter=8388608

    # Tick in need every processing of Mega Crafting Center. Type: int [range: 1 ~ 8192, default: 20]
    I:TickEveryProcess_MegaCraftingCenter=20
}


"micro spacetime fabricatorio" {
    # Max parallel of Micro SpaceTime Fabricatorio. [range: 1 ~ 2000000000, default: 16]
    I:Parallel_MicroSpaceTimeFabricatorio=16

    # Safe Calamity, Micro SpaceTime Fabricatorio will not explode, but check structure failed. [default: false]
    B:Safe_Calamity_MicroSpaceTimeFabricatorio=false
}


miracledoor {
    # Miracle Door EU Cost multiplier in Alloy Blast Smelter mode. Type: int [range: 1 ~ 2147483647, default: 16]
    I:multiplierOfMiracleDoorEUCostABSMode=16

    # Miracle Door EU Cost multiplier in Electric Blast Furnace mode. Type: int [range: 1 ~ 2147483647, default: 64]
    I:multiplierOfMiracleDoorEUCostEBFMode=64

    # Seconds of Miracle Door Default Progress Time in Alloy Blast Smelter mode. Type: double [default: 25.6]
    S:secondsOfMiracleDoorProcessingTimeABSMode=25.6

    # Seconds of Miracle Door Default Progress Time in Electric Blast Furnace mode. Type: double [default: 64.0]
    S:secondsOfMiracleDoorProcessingTimeEBFMode=64.0
}


miracletop {
    # The default mode when deploy a machine. 0=Circuit Assembler, 1=Gravitation Inversion. Type: byte [default: 0]
    S:Mode_Default_MiracleTop=0

    # Parallel per Ring add. Type: int [range: 1 ~ 65536, default: 128]
    I:Parallel_PerRing_MiracleTop=128

    # How many Rings can enable Perfect overclock. Type: int [range: 1 ~ 16, default: 8]
    I:RingsAmount_EnablePerfectOverclock_MiracleTop=8

    # Speed Up amount of per Ring. Type: int [range: 1 ~ 64, default: 4]
    I:SpeedUpMultiplier_PerRing_MiracleTop=4
}


modularizedmachinestuffs {
    # Parallel parameters of Parallel Controller.
    I:ParallelOfParallelController <
        8
        128
        2048
        32768
        524288
        8388608
        134217728
        2147483647
     >

    # Power Consumption Multiplier parameters of Power Consumption Controller
    D:PowerConsumptionMultiplierOfPowerConsumptionController <
        0.95
        0.9
        0.85
        0.8
        0.75
        0.7
        0.5
        0.25
     >

    # Speed multiplier parameters of Speed Controller.
    I:SpeedMultiplierOfSpeedController <
        2
        4
        8
        16
        32
        64
        128
        256
     >
}


moleculedeconstructor {
    # The default mode when deploy a machine. 0=Electrolyzer, 1=Centrifuge. Type: byte [range: 0 ~ 1, default: 0]
    I:Mode_Default_MoleculeDeconstructor=0

    # Parallel per piece add. Type: int [range: 1 ~ 65536, default: 24]
    I:Parallel_PerPiece_MoleculeDeconstructor=24

    # How many piece can enable perfect overclock. Type: int [range: 1 ~ 64, default: 16]
    I:PieceAmount_EnablePerfectOverclock_MoleculeDeconstructor=16

    # The speed bonus = this ^ tier . Type: float [default: 0.9]
    S:SpeedBonus_MultiplyPerTier_MoleculeDeconstructor=0.9
}


photoncontrollerupgradecasingspeedincrement {
    # Photon Controller Upgrade Casing Speed Increment data.
    I:PreciseHighEnergyPhotonicQuantumMaster <
        100
        200
        300
        400
        500
        1000
        2000
        4000
        7000
        10000
        14000
        19000
        25000
        32000
     >
}


physicalformswitcher {
    # The default mode when deploy a machine. true=Fluid Extraction, false=Fluid Solidfication. Type: boolean [default: false]
    B:Mode_Default_PhysicalFormSwitcher=false

    # The speed bonus = this ^ tier . Type: float [default: 0.9]
    S:SpeedBonus_MultiplyPerTier_PhysicalFormSwitcher=0.9
}


powerchairbgm {
    # Enable Power Chair BGM [default: true]
    B:"Enable Power Chair BGM"=true
}


precisehighenergyphotonicquantummaster {
    # The default mode when deploy a machine. true=Photon Controller, false=Laser Engraver. Type: boolean [default: false]
    B:Mode_Default_PreciseHighEnergyPhotonicQuantumMaster=false

    # Parallel of Precise High Energy Photonic Quantum Master in Laser Engraver mode. Type: int [range: 1 ~ 65536, default: 256]
    I:Parallel_LaserEngraverMode_PreciseHighEnergyPhotonicQuantumMaster=256

    # Parallel of Precise High Energy Photonic Quantum Master in Photon Controller mode. Type: int [range: 1 ~ 65536, default: 16]
    I:Parallel_PhCMode_PreciseHighEnergyPhotonicQuantumMaster=16

    # Speed Multiplier of Precise High Energy Photonic Quantum Master in Laser Engraver mode. Type: int [range: 1 ~ 256, default: 2]
    I:SpeedUpMultiplier_LaserEngraverMode_PreciseHighEnergyPhotonicQuantumMaster=2

    # Speed Multiplier of Precise High Energy Photonic Quantum Master in Photon Controller mode. Type: int [range: 1 ~ 256, default: 1]
    I:SpeedUpMultiplier_PhCMode_PreciseHighEnergyPhotonicQuantumMaster=1
}


primordialdisjunctus {
    # Base recipe time to generate primordial aspects. At 1A EV with 20s base recipe time this machine stops scaling at 1A UMV due to one ticking. Type: int [range: 1 ~ 2147483646, default: 20]
    I:BaseRecipeDuration_PrimordialDisjunctus=20

    # Amplifies the amount of boost gain per cycle, 0 = no gain. Type: int [range: 0 ~ 100, default: 1]
    I:BoostGainMultiplier_PrimordialDisjunctus=1

    # Amplifies the primordial aspect output boost, 0 = no increase in primordial aspect from boost. Type: int [range: 0 ~ 16, default: 1]
    I:BoostMultiplier_PrimordialDisjunctus=1

    # The amount of boost degrades per cycle, 0 = no degradation. Type: int [range: 0 ~ 100, default: 1]
    I:BoostReduction_PrimordialDisjunctus=1

    # Base amount of parallels per diffusion cell starting at novice tier this value doubles every diffusion cell tier. Type: int [range: 1 ~ 512, default: 1]
    I:DiffusionCellParallel_PrimordialDisjunctus=1

    # Base amount of primordial aspects generated per parallel. Type: int [range: 1 ~ 16384, default: 16]
    I:PrimalAspectsPerParallel_PrimordialDisjunctus=16

    # Amplifies the amount of purification efficiency gain per cycle, 0 = no gain. Type: int [range: 0 ~ 100, default: 1]
    I:PurificationGainMultiplier_PrimordialDisjunctus=1

    # The amount of purification efficiency degrades per cycle, 0 = no degradation. Type: int [range: 0 ~ 100, default: 1]
    I:PurificationReduction_PrimordialDisjunctus=1
}


processingarray {
    # Enable Processing Array System. [default: true]
    B:Enable_ProcessingArray=true
}


recipe {
    # Enable Registry of DTPF Extra Recipes about Infinity Hypogen and SpaceTime. [default: false]
    B:Registry_DTPF_ExtraRecipe=false

    # Registry Dragon Blood Extra Recipes. [default: true]
    B:Registry_DragonBlood_ExtraRecipe=true
}


scavenger {
    # Enable perfect overclock of Scavenger. [default: false]
    B:EnablePerfectOverclock_Scavenger=false

    # EU Modifier of Scavenger. Type: float [default: 0.6]
    S:EuModifier_Scavenger=0.6

    # The speed bonus = this ^ tier . Type: double [default: 0.8]
    S:SpeedBonus_MultiplyPerTier_Scavenger=0.8
}


silksong {
    # Parallel per Piece add. Type: int [range: 1 ~ 65536, default: 32]
    I:Parallel_PerPiece_Silksong=32

    # The speed bonus of every voltage level. Speed bonus from voltage = thisParameter ^ voltageLevel. Type: float [default: 0.85]
    S:SpeedBonus_MultiplyPerVoltageTier_Silksong=0.85

    # The speed multiplier of Coil tier. Type: float [default: 1.0]
    S:SpeedMultiplier_CoilTier_Silksong=1.0
}


singleblocks {
    # How many seconds Infinite Air Hatch fill itself to max capacity. Type:double [default: 1.0]
    S:secondsOfInfiniteAirHatchFillFull=1.0
}


spaceapiary {
    # Enable Space Apiary Module. [default: true]
    B:EnableSpaceApiaryModule=true

    # Ticks required for each run. Type: int [range: 1 ~ 2147483646, default: 100]
    I:SpaceApiaryCycleTime=100

    # DNA needed per parallel for Space Apiary Module MK-I. Type: int [range: 1 ~ 2147483646, default: 100]
    I:SpaceApiaryDNACost_T1=100

    # DNA needed per parallel for Space Apiary Module MK-II. Type: int [range: 1 ~ 2147483646, default: 25]
    I:SpaceApiaryDNACost_T2=25

    # DNA needed per parallel for Space Apiary Module MK-III. Type: int [range: 1 ~ 2147483646, default: 5]
    I:SpaceApiaryDNACost_T3=5

    # DNA needed per parallel for Space Apiary Module MK-IV. Type: int [range: 1 ~ 2147483646, default: 1]
    I:SpaceApiaryDNACost_T4=1

    # Enable output display in controller. Type: boolean [default: true]
    B:SpaceApiaryEnableDisplayInfo=true

    # Max parallels for Space Apiary Module MK-I. Type: int [range: 1 ~ 2147483646, default: 256]
    I:SpaceApiaryMaxParallels_T1=256

    # Max parallels for Space Apiary Module MK-II. Type: int [range: 1 ~ 2147483646, default: 4096]
    I:SpaceApiaryMaxParallels_T2=4096

    # Max parallels for Space Apiary Module MK-III. Type: int [range: 1 ~ 2147483646, default: 32768]
    I:SpaceApiaryMaxParallels_T3=32768

    # Max parallels for Space Apiary Module MK-IV. Type: int [range: 1 ~ 2147483646, default: 2147483647]
    I:SpaceApiaryMaxParallels_T4=2147483647

    # Enable DNA consuming for Space Apiary Modules. Type: boolean [default: true]
    B:enableDNAConsuming=true
}


spacescaler {
    # The default mode when deploy a machine. 0=Compressor, 1=Extractor. Can not set the default 2 - Cyclotron, machine will crash directly. Type: byte [range: 0 ~ 1, default: 0]
    I:Mode_Default_SpaceScaler=0

    # Extra outputs multiplier of Cyclotron mode, every higher tier of field block bring this value multiplied extra output items and fluids. Type: int [range: 1 ~ 64, default: 4]
    I:Multiplier_ExtraOutputsPerFieldTier_SpaceScaler=4

    # Speed Multiplier at beyond Tier 2 field generator block. Type: int [range: 1 ~ 64, default: 10]
    I:SpeedMultiplier_BeyondTier2Block_SpaceScaler=10

    # Speed Multiplier at Tier 1 field generator block. Type: int [range: 1 ~ 64, default: 1]
    I:SpeedMultiplier_Tier1Block_SpaceScaler=1
}


spacestation {
    # Entity Ship ID [range: 1 ~ 32767, default: 114]
    I:EntityShipID=114

    # decide whether can use mega space station. [default: false]
    B:activateMegaSpaceStation=false
}


speedmultiplier_normalmode_swelegfyrblastfurnace {
    # Speed Multiplier in Normal Mode of Swelegfyr Blast Furnace. Type: float
    D:SwelegfyrBlastFurnace=3.9000000953674316
}


speedmultiplier_passivemode_swelegfyrblastfurnace {
    # Speed Multiplier in Passive Mode of Swelegfyr Blast Furnace. Type: float
    D:SwelegfyrBlastFurnace=3.9000000953674316
}


starcoreminer {
    # How many ore item stacks every mining output. Type: int [range: 1 ~ 2147483647, default: 24]
    I:AmountOfOreStackPerMining_StarcoreMiner=24

    # Check Mining Pipe Structure when check machine structure. [default: true]
    B:CheckMiningPipeStructure_StarcoreMiner=true

    # Debug mode. [default: false]
    B:DebugMode_StarcoreMiner=false

    # How many ticks per mining cost. 20 tick = 1 second . Type: int [range: 1 ~ 2147483647, default: 128]
    I:DurationPerMining_StarcoreMiner=128

    # Enable Starcore Miner. [default: true]
    B:Enable_StarcoreMiner=true

    # EU/t when Starcore Miner working. Type: int [range: 1 ~ 2147483647, default: 2013265912]
    I:Eut_StarcoreMiner=2013265912

    # The height value of Mining Pipe structure of a Starcore Miner need to reach. Type: byte [range: 1 ~ 255, default: 24]
    I:HeightValueLimit_StarcoreMiner=24

    # How many ores in one item stack when mining. Type: int [range: 1 ~ 2147483647, default: 131072]
    I:StackSizeOfEveryOreItemStackWhenMining_StarcoreMiner=131072
}


"strange matter aggregator" {
    # Extra limitation of the number of Hologram Projector stack size in structure auto building. Type: int [range: 1 ~ 64, default: 1]
    I:StructureLoopBuildingLimit_StrangeMatterAggregator=1
}


swelegfyrblastfurnace {
    # Enable Swelegfyr Blast Furnace. [default: true]
    B:Enable_SwelegfyrBlastFurnace=true

    # Max Parallel in Normal Mode of Swelegfyr Blast Furnace. [range: 1 ~ 2147483647, default: 4096]
    I:Parallel_NormalMode_SwelegfyrBlastFurnace=4096

    # Max Parallel in Passive Mode of Swelegfyr Blast Furnace. [range: 1 ~ 2147483647, default: 256]
    I:Parallel_PassiveMode_SwelegfyrBlastFurnace=256
}


thermalenergydevourer {
    # The default mode when deploy Thermal Energy Devourer. 0=HighSpeedMode, 1=HighParallelMode. Type: byte [range: 0 ~ 1, default: 0]
    I:Mode_Default_ThermalEnergyDevourer=0

    # Max Parallel of Thermal Energy Devourer high parallel mode. Type: int [range: 1 ~ 2147483647, default: 2147483647]
    I:Parallel_HighParallelMode_ThermalEnergyDevourer=2147483647

    # Max Parallel of Thermal Energy Devourer high speed mode. Type: int [range: 1 ~ 2147483647, default: 1024]
    I:Parallel_HighSpeedMode_ThermalEnergyDevourer=1024

    # How many ticks per progressing cost in Wireless mode of Thermal Energy Devourer. Type: int [range: 1 ~ 16384, default: 128]
    I:TickPerProgressing_WirelessMode_ThermalEnergyDevourer=128
}


towerofabstraction {
    # EUt of Crepper eggs, type: long [default: 512]
    S:MEG_CrepperEgg_Gen=512

    # EUt of Dragon eggs, type: long [default: 2048]
    S:MEG_DragonEgg_Gen=2048

    # How many dynamo allowed in total [range: 1 ~ 2147483647, default: 1]
    I:MEG_Dynamo_Limit=1

    # Every n infinity eggs bring n*this max efficiency buff [range: 0 ~ 2147483647, default: 100]
    I:MEG_Efficiency_InfinityEggBuff=100

    # Every n empty position bring n*this max efficiency loss [range: 0 ~ 2147483647, default: 500]
    I:MEG_Efficiency_Lost=500

    # Every 2^n pieces bring n*this max efficiency buff [range: 0 ~ 2147483647, default: 200]
    I:MEG_Efficiency_PiecesBuff=200

    # EUt of Infinity eggs, type: long [default: 16384]
    S:MEG_InfinityEgg_Gen=16384

    # Piece num when unlock laser [range: 1 ~ 2147483647, default: 16]
    I:MEG_Laser_Pieces=16

    # Overall multiply of EUt, type: double [default: 1.0]
    S:MEG_Overall_Multiply=1.0

    # If rotation allowed [default: false]
    B:MEG_Rotation=false
}


vacuumfilterextractor {
    # Eu Modifier of Vacuum Filter Extractor. Type: float [default: 0.5]
    S:EuModifier_VacuumFilterExtractor=0.5

    # Default mode when placing a Vacuum Filter Extractor controller block. 0=Distillation Tower; 1=Distillery. Type: byte [range: 0 ~ 1, default: 0]
    I:Mode_Default_VacuumFilterExtractor=0
}


